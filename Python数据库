2:数据库技术回顾
数据库简介
常用数据库系统：关系型数据库（SQLite，MySQL，mssql，oracle），对象关系型（PostgreSQL），

NoSQL数据库（MongoDB，redls）
数据表建立：根据项目需求分析ER模型图，将ER模型转换为关系数据模型（表）
数据库查询语言（SQL）：创建表（CREATE），插入表（INSERT），查询表（SELECT），修改表

（UPGRATE），删除记录（DELETE）。演示（sqliteman开发环境）

3：Python DB API2.0介绍
连接对象（connect（）函数成功连接后返回的对象。方法：cursor（），commit（），rollback（），

close（））

游标对象（调用连接对象的cursor返回游标对象。方法：callproc（）execute（），executemany（）

，fetchone（），fetchmany（size），fetchall（），nextset（）。属性：arraysize，setinputsize

，setoutputsize）

操作异常（standardError：Warning，Error（InterfaceError，DataBaseError））

参数形式（）

4：sqlite3模块初步
SQLite数据库简介（开源嵌入式关系数据库，不需要网络服务器，客户端和服务器端在同一进程控件运

行）
SQLite3模块使用步骤（1、导入sqlit3模块；2、连接数据库；3、获取游标；3、用游标对象的方法操作

数据库；4、提交事物；5、关闭连接）
实现CRUD（create，insert，retrieve，update，delete）

5：sqlite3模块进阶
行对象（Row）简介（from sqlit3 import Row）
批量数据库操作（cur.executemany(),cur.executescript()）
创建可在sql语句使用的自定义函数（创建基本函数con.creat_function，创建聚合函数

con.creat_aggregate()）
数据类型的转换（None--NULL，int--integer，str--text，bytes--blob
二进制文件操作

6：MariaDB数据库访问
MariaDB简介（采用C/S模式，客户端服务器模式；客户端采用TCP/IP协议连接到Mysql；开源数据库；使

用标准的SQL数据库语言）
数据库环境搭建
第三方库（pymysql；MYSQL-python；MySQL官方连接库（MySQL connector Python，官网下载；采用，

测试：import mysql；2.0.3））
MySQL模块简介（连接数据库：mysql.connector.connect,参数（user，password，host（localhost）

，database））
CRUD实现

7：ORM工具SQLAlchemy
ORM介绍（面向对象编程中数据保存在对象中并在对象中交互，运行于内存；）
ORM特性
SQLAlchemy
使用步骤
定义实例
基本操作
关系建立

8：数据库应用开发实例1
基本功能的通讯录（功能：联系人管理（建立、添加、删除、查询联系人），分组（建立、修改、删除

、查询分组）；ER模型；建立表）
使用sqlite数据库操作的实现
使用SQLAlchemy实现
启示

9：MongoDB数据库
简介（非关系型数据库；开源跨平台的；服务器可以集群；支持高并发大写和海量存储；数据存储没有

模式）
mengoDB数据存储模式（集合（关系数据库中的表）；文档（关系数据库中记录）；文档就是一些键值对

（类似Python中的字典））
环境建立（到www.mongodb.org下载；数据库系统文件目录：bin；mongod.exe是数据库启动执行文件）
基本客户端操作（启动客户端：bin\mongo.exe；使用数据库和集合前不用建立，执行插入数据时会自动

建立）
常用操作命令


10：使用pymongo访问MongoDB数据库

11：用mongoengine实现MongoDB的访问初步

12：用mongoengine实现MongoDB的访问进阶

13：数据库开发实例二（1）

14：数据库开发实例二（2）


